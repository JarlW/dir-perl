#START OF PARAMETERS!!!#Comment and uncoment depending on OS# MAYBE I'll write something later$OS="MAC";#$OS="WIN";#$OS="UNIX";# NOTE Macs dont do: 'chdir ../'#MACOS	if ($OS=~"MAC"){		$dirSep =':';		$rootDir='FATSO:perl:tjs';		#	$rootDir='FATSO:dokumentit:www-stuff';			$cfgDir='FATSO:perl:tjs:perl.cfg';}#WINDOWS	if ($OS=~"WIN")	{		$dirSep ='\\';			$rootDir='H:\sdc\documentation';		$cfgDir='H:\sdc\documentation\perl.cfg';}#UNIX					if ($OS=~"UNIX"){		$dirSep ='/';		$rootDir='';		$cfgDir='';}	$currLang="SE";	$homeName ="HOME";			#used insted of $configFile for rootDir	$configFile ='toc.cfg';		#contains cleartext for directory  name	$dirTypeDeny= "icon|images|cfg"; #applies also on files!print "\nStart main....\n";	# START WITH ROOT DIR!# TOC for rootDir is not done by sub doDir()	opendir(DIR,$rootDir) || die "Can't open current \ndirectory: $rootDir";	@filenames = readdir(DIR);	closedir(DIR);	chdir $rootDir;	for (@filenames) {		local($i)= $_;		next if ($i=~ /.*($dirTypeDeny)/);		if (!(-d $i)){			next if ($i!~ /.*\.($configFile)$/);		}		else{			push(@toDoDir,$i);			}		} #filenamesprint " Root done\n";# RECURSION I ARRAY	print " toDolist \(dirs: @toDoDir \)\n";#	print " Starting Subs\n";		while(@toDoDir){			$nextDir= pop(@toDoDir);#			print "   starting $nextDir\n";			chdir $rootDir;			&doDir($nextDir);			#print "..Done\n";		}	print "is toDoList empty\? \-\>@toDoDir\<\-\n";	# END RECURSION#subssub doDir{	local($currDir) = @_;	local ($a);	local ($TempCurrDir);	# open a dir and read		if ($OS=~"MAC"){$TempCurrDir ="$dirSep$currDir";}	    #MACOS	if ($OS=~"WIN")	{$TempCurrDir ="$currDir";}				#WINDOWS	if ($OS=~"UNIX"){$TempCurrDir ="$currDir";}				#UNIX		opendir(DIR,$TempCurrDir) || die 							"Can't open current \ndirectory: $currDir";	local(@filename) = readdir(DIR);	closedir(DIR);	chdir $TempCurrDir;		 	for (@filename) {		local($i)= $_;		next if (!(-d $i));		next if ($i=~ /.*($dirTypeDeny)/);		$newDir ="$currDir$dirSep$i";		&UpdateCFG ($newDir);	#print  "NewDir:  $newDir\n";		push(@toDoDir,$newDir);				#VERY IMPORTANT LINE!			} # End forLoop} #end SUB doDir#Get Directory title by absolut PATH# AND UPDATE CONTENT!!!sub UpdateCFG {	local($in) = @_;	local($a);	local($dirTitle);	local($get);	local ($yes);		$a ="$rootDir$dirSep$in$dirSep$configFile";print "working on: $a\n";	open(CFG,$a)|| die "doesnt exist,$a\n";	while (<CFG>){$get="$get$_";}	close CFG;#	print "$get\n";		if($get=~ m/TITLE-$currLang:(.*);/) {			$dirTitle=$1;			print "Currenttitle is: $dirTitle\n";			print "do you want to change? (Y/N) ";			chop ($yes =<STDIN>);				if ($yes=~/(Y|y)/){					print "New Title: ";					chop ($dirTitle =<STDIN>);					local ($a2) = ">>$a";					open (CFG, $a2);					while (<CFG>){$get="$get$_";}					$get=~ s/TITLE-$currLang:(.*);/TITLE-$currLang:$dirTitle;/;					print CFG "TITLE\-$currLang\:$dirTitle\;\n";						close CFG;				}				#else {print "Its a No\n";}		}		#print "$dirTitle\n\n";	} #end getDirTitle2print "End of main\n\n";