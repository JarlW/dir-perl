#START OF PARAMETERS!!!#Comment and uncoment depending on OS# MAYBE I'll write something later$OS="MAC";#$OS="WIN";#$OS="UNIX";# NOTE Macs dont do: 'chdir ../'#MACOS	if ($OS=~"MAC"){		$dirSep =':';		$rootDir='FATSO:perl:tjs';		#	$rootDir='FATSO:dokumentit:www-stuff';			$cfgDir='FATSO:perl:tjs:perl.cfg:table';}#WINDOWS	if ($OS=~"WIN")	{		$dirSep ='\\';			$rootDir='H:\sdc\documentation';		$cfgDir='H:\sdc\documentation\perl.cfg';}#UNIX					if ($OS=~"UNIX"){		$dirSep ='/';		$rootDir='';		$cfgDir='';}		$currLang = 'SE';	$otherLang= 'EN|FI|DE|FR';	$homeName ="HOME";			#used insted of $configFile for rootDir	$configFile ='toc.cfg';		#contains cleartext for directory  name								#Note that it can later contain more than that	$tocFile = 'toctable.html';	#The actual name for TableOfContents files	$tocTarget= "hankToc";  	#frameTargets!	$mainTarget ='hankText';#Skips files and/or directorys that should not show in the TOC#Note: You do NOT have to deny file types (*.gif) see:$fileTypeAallow	$dirTypeDeny= "icon|images|cfg"; #applies also on files!	$fileStartsDeny= "$tocFile|toc";	$fileContainsDeny = "frame|zxweq";#Allow ONLY filetypes with theese extensions	$fileTypeAallow = 'html|htm|txt|shtml';# HTML template files which are used only once during "startUp"# see: INIT HTML-stuff	$fileHead = 'head.cfg';	$fileDirUp = 'dirUp.cfg';	$fileDirUpCurr = 'dirUpCurr.cfg';	$fileItemFile = 'itemLineFile.cfg';	$fileItemDir = 'itemLineDir.cfg';	#lazyness, These should be in files as should @endHtml();:	$starItemList='';	$endItemList='</TABLE>';#END OF PARAMETERS!!!print "\nStart main....\n";# INIT HTML stuff# e.g READ CFG-files into memory# DONT CAHNGE VALUES IN OUTPUT ANYWHERE IN SCRIPT, ONLY READ!# THEY ARE USED many times.#INIT start of HTML-File	open (STYLE, "$cfgDir"."$dirSep"."$fileHead");	while (<STYLE>){$getHEAD="$getHEAD$_";}	close STYLE;	#INIT dirUp-Part	open (STYLE, "$cfgDir"."$dirSep"."$fileDirUp");	while (<STYLE>){$getDIRUP="$getDIRUP$_";}	close STYLE;#INIT dirUpCurr-Part	open (STYLE, "$cfgDir"."$dirSep"."$fileDirUpCurr");	while (<STYLE>){$getDIRUPCURR="$getDIRUPCURR$_";}	close STYLE;	#INIT Template for file Item 	open (STYLE, "$cfgDir"."$dirSep"."$fileItemFile");	while (<STYLE>){$getFILEITEM="$getFILEITEM$_";}	close STYLE;	#INIT Template for Directory Item 	open (STYLE, "$cfgDir"."$dirSep"."$fileItemDir");	while (<STYLE>){$getDIRITEM="$getDIRITEM$_";}	close STYLE;print " Init done\n";	# START WITH ROOT DIR!# TOC for rootDir is not done by sub doDir()	opendir(DIR,$rootDir) || die "Can't open current \ndirectory: $rootDir";	@filenames = readdir(DIR);	closedir(DIR);	chdir $rootDir;	#open the toc.file in ROOT dir	$tempTocFile = ">$tocFile";	open (ROOTTOCH, $tempTocFile);	print ROOTTOCH &startHtml($homeName);	print ROOTTOCH &dirUpLine("",$homeName,"",0);	print ROOTTOCH $starItemList;	for (@filenames) {		local($i)= $_;		next if ($i=~ /^\..*/);  #All files that starts with a dot	#	next if $i eq '..';		next if ($i=~ /.*($dirTypeDeny)/);		if (!(-d $i)){				if ($currLang ne 'SE'){					next if ($i!~ /.*\-($currLang)\..*/i);				}				else {					next if ($i=~ /.*\-($otherLang)\..*/i);				}										#Language filter!			next if ($i=~ /($fileStartsDeny).*/);			next if ($i=~ /.*($fileContainsDeny).*/);					next if ($i!~ /.*\.($fileTypeAallow)$/);			$title = &getTitle($i);			print ROOTTOCH &itemLine($i,$title, "F");		}		else{			push(@toDoDir,$i);				$dirtitle = &getDirTitle($i);			print ROOTTOCH &itemLine("$i/$tocFile",$dirtitle,"D");		}		} #filenames	print ROOTTOCH $endItemList;	print ROOTTOCH &endHtml();	close ROOTTOCH;print " Root done\n";# RECURSION I ARRAY	print " toDolist \(dirs: @toDoDir \)\n";	print " Starting Subs\n";		while(@toDoDir){			$nextDir= pop(@toDoDir);			print "   starting $nextDir\n";			chdir $rootDir;			&doDir($nextDir);			#print "..Done\n";		}	print "is toDoList empty\? \-\>@toDoDir\<\-\n";	# END RECURSION#subssub doDir{	local($currDir) = @_;	local ($a);	local ($TempCurrDir);	local ($b);	# open a dir and read		if ($OS=~"MAC"){$TempCurrDir ="$dirSep$currDir";}	    #MACOS	if ($OS=~"WIN")	{$TempCurrDir ="$currDir";}				#WINDOWS	if ($OS=~"UNIX"){$TempCurrDir ="$currDir";}				#UNIX		opendir(DIR,$TempCurrDir) || die 							"Can't open current \ndirectory: $currDir";	local(@filename) = readdir(DIR);	closedir(DIR);	chdir $TempCurrDir;	#open a toc.file in curr dir	$tempTocFile = ">$tocFile";	open (TOCH, $tempTocFile);	print TOCH &startHtml($currDir);# IN PROGESS......# Create Navigation listlocal($oneDirUp) ="..\/";local($dirUp) ="";#WINDOS ONLY#local(@path) = split(/\\/,$currDir);#MAC ONLY#	local(@path) = split(/:/,$currDir);	if ($OS=~"MAC"){@path = split(/:/,$currDir);}	#MACOS	if ($OS=~"WIN")	{@path = split(/\\/,$currDir);}	#WINDOWS	if ($OS=~"UNIX"){@path = split(/\//,$currDir);}	#UNIX		#INIT dirUp		local($j)=$#path;		$dirUp ="..\/"; # this is for rootDir 		# count all subDirs and put ../ for each			while ($j--){				$dirUp .=$oneDirUp;			}		$j=$#path;		print TOCH &dirUpLine("$dirUp$tocFile",$homeName,"",1);		local ($add);		local($tPath)="";		for (@path){			local($dir)=$_;			$tPath.="$dir$dirSep";			$dirUp =substr ($dirUp,3);			$add .="-";			local($tTitle)=&getDirTitleABS($tPath);			print TOCH &dirUpLine("$dirUp$tocFile",$tTitle,$add,$j);						$j--;		}	#END of DIRUP#Start TOC-list			print TOCH $starItemList;	for (@filename) {		local($i)= $_;		next if ($i=~ /^\..*/);  #All files that starts with a dot	#	next if $i eq '..';		next if ($i=~ /.*($dirTypeDeny)/);		if (!(-d $i)){				if ($currLang ne 'SE'){					next if ($i!~ /.*\-($currLang)\..*/i);				}				else {					next if ($i=~ /.*\-($otherLang)\..*/i);				}							#Language filter!			next if ($i=~ /($fileStartsDeny).*/);			next if ($i=~ /.*($fileContainsDeny).*/);					next if ($i!~ /.*\.($fileTypeAallow)$/);			$title = &getTitle($i);			print TOCH &itemLine($i,$title, "F");				}		else{			$title = &getDirTitle($i);			print TOCH &itemLine("$i/$tocFile",$title,"D");			#	print  "  $i, $title\n";		$newDir ="$currDir$dirSep$i";		push(@toDoDir,$newDir);				#VERY IMPORTANT LINE!		}	} # End forLoop		print TOCH $endItemList;#END TOC-listprint TOCH &endHtml();close TOCH;} #end SUB doDir# fetch a TITLE from a filesub getTitle {	local($in) = @_;	local($get);	open(CurrFILE,$in);	read (CurrFILE,$get,500);	close CurrFILE;	if($get=~ m/<TITLE>(.*)<\/TITLE>/i) 	{												# HTML MATCH		$title=$1;	} 	else {$title=$in;		#the filename is the most logical!	}	return $title;} # end getTitle# hamtar TITLE fran en cfgfil for en dirsub getDirTitle {	local($in) = @_;	local($a);	local($dirTitle);	local($f);	local($get);			#KOLLA OS Har inte hittat annan lšsning (MACAR behšver : fšr current dir	if ($OS=~"MAC"){$a ="$dirSep$in$dirSep$configFile";}	    #MACOS	if ($OS=~"WIN")	{$a ="$in$dirSep$configFile";}				#WINDOWS	if ($OS=~"UNIX"){$a ="$in$dirSep$configFile";}				#UNIX		open(CFG,$a);	while (<CFG>){$get="$get$_";}	close CFG;			if($get=~ m/TITLE-$currLang:(.*);/) {			$dirTitle=$1;} 		else {		#No CFG file or lang code dosnt exists create one:		local ($a2) = ">>$a";			open (CFG, $a2);			print CFG "TITLE\-$currLang\:$a\;\n";				$dirTitle="$in\/";			close CFG;		}		return $dirTitle;} #end getDirTitle#Get Directory title by absolut PATHsub getDirTitleABS {	local($in) = @_;	local($a);	local($dirTitle);	local($get);			$a ="$rootDir$dirSep$in$configFile";	open(CFG,$a);	while (<CFG>){$get="$get$_";}	close CFG;			if($get=~ m/TITLE-$currLang:(.*);/) {			$dirTitle=$1;} 	else {		$dirTitle="$in\/";	}		return $dirTitle;	} #end getDirTitle2# HTML SUBS, # Used for change of # No read or write of files!# So never use filehandle here!# See in INIT Html	sub startHtml {		local($in) = @_;		local($out) =$getHEAD;	#	$out=~ s/<TITLE>(.*)<\/TITLE>/<TITLE>TOC for $in<\/TITLE>/;			# HTML MATCH	#	$out=~ s/<BASE TARGET=\"(.*)\">/<BASE TARGET=\"$mainTarget\">/;		# HTML MATCH		$out=~ s/TITLEhere/$in/;		$out=~ s/TARGEThere/$mainTarget/;#should this be changed to similar as above ?				return $out;	} #end StartHtmlsub dirUpLine {	local($i1,$i2,$prefix,$count) = @_;	local ($out);		if ($count==0){				$out=$getDIRUPCURR;			$out=~ s/TITLEhere/$i2/;			$out=~ s/PrefiXhere/$prefix/;		}		else {			$out=$getDIRUP;			$out=~ s/URLhere/$i1/;			$out=~ s/TITLEhere/$i2/;			$out=~ s/TARGEThere/$tocTarget/;			$out=~ s/PrefiXhere/$prefix/;		}	return $out;} #end dirUpLinesub itemLine {	local($i1,$i2,$i3) = @_;	local ($out);	if ($i3 =~ "D"){		$out=$getDIRITEM;		$out=~ s/URLhere/$i1/;		$out=~ s/TITLEhere/$i2/;		$out=~ s/TARGEThere/$tocTarget/;	} 	else {		$out=$getFILEITEM;		$out=~ s/URLhere/$i1/;		$out=~ s/TITLEhere/$i2/;	}	return $out;} #end itemLinesub endHtml {	local($in) = @_;	$out ="\n</BODY>\n</HTML>";	return $out;} #end endHtmlprint "end of all";